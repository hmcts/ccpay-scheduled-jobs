plugins {
    id 'java'
    id 'maven'
    id 'maven-publish'
    id 'java-library'
    id "com.jfrog.bintray" version "1.7.3"
}
group = 'uk.gov.hmcts.reform.payment'
version '1.0.0'

sourceCompatibility = 1.8
targetCompatibility = 1.8
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

repositories {
    maven { url "http://dl.bintray.com/hmcts/hmcts-maven/" }
    mavenLocal()
    jcenter()
}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.12'
    compile group: 'io.rest-assured', name: 'rest-assured', version: '3.0.0'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.26'
    compile group: 'org.jboss.aerogear', name: 'aerogear-otp-java', version:'1.0.0'
    compile group: 'org.springframework', name: 'spring-context', version: '5.1.8.RELEASE'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version:'2.9.9'
    compile group: 'io.github.openfeign', name: 'feign-jackson', version: '10.2.3'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '1.10.19'
}
jar {
    manifest {
        attributes(
                'Main-Class': 'JobProcessorApplication',
        )
    }
}

task fatJar(type: Jar) {
    manifest.from jar.manifest
    classifier = 'all'
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
    with jar
}
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

publishing {
    publications {
        Main(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            groupId project.group
            artifactId 'scheduled-jobs'
            version project.version

            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'library for creating cc-payments web jobs')
                root.appendNode('name', 'CCPAY scheduled jobs')
                root.appendNode('url', 'https://github.com/hmcts/ccpay-scheduled-jobs')
                root.children().last() + pomConfig
            }
        }
    }
}
bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    publications = ['Main']
    publish = true
    pkg {
        repo = 'hmcts-maven'
        name = 'ccpay-scheduled-jobs'
        userOrg = 'hmcts'
        licenses = ['MIT']
        vcsUrl = 'https://github.com/hmcts/ccpay-scheduled-jobs'
        version {
            name = project.version
        }
    }
}